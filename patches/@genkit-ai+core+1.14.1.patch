patch-package
--- a/node_modules/@genkit-ai/core/package.json
+++ b/node_modules/@genkit-ai/core/package.json
@@ -53,7 +53,6 @@
     "@opentelemetry/api": "^1.9.0",
     "@opentelemetry/context-async-hooks": "^1.25.1",
     "@opentelemetry/sdk-trace-base": "^1.25.1",
-    "@opentelemetry/sdk-node": "^0.52.1",
     "dotenv": "^16.4.5",
     "long": "^5.2.3",
     "winston": "^3.13.0",
--- a/node_modules/@genkit-ai/core/lib/tracing.js
+++ b/node_modules/@genkit-ai/core/lib/tracing.js
@@ -32,7 +32,6 @@
 const api_1 = require("@opentelemetry/api");
 const context_async_hooks_1 = require("@opentelemetry/context-async-hooks");
 const sdk_trace_base_1 = require("@opentelemetry/sdk-trace-base");
-const sdk_node_1 = require("@opentelemetry/sdk-node");
 const winston = require("winston");
 const zod_1 = require("zod");
 const common_1 = require("./common.js");
@@ -208,24 +207,7 @@
     function __initTracer(telemetry) {
         api_1.context.setGlobalContextManager(new context_async_hooks_1.AsyncLocalStorageContextManager());
         if (telemetry.instrumentor === 'open-telemetry' && telemetry.config) {
-            const { exporter, ...otelConfig } = telemetry.config;
-            if (exporter) {
-                // We only support OTLP exporter for now.
-                let traceExporter;
-                if (exporter.type === 'otlp' && exporter.grpc) {
-                    const { OTLPTraceExporter, } = require('@opentelemetry/exporter-trace-otlp-grpc');
-                    traceExporter = new OTLPTraceExporter(exporter.grpc);
-                }
-                if (!traceExporter) {
-                    throw new Error(`Unsupported trace exporter config: ${JSON.stringify(exporter)}`);
-                }
-                const sdk = new sdk_node_1.NodeSDK({
-                    ...otelConfig,
-                    traceExporter,
-                });
-                sdk.start();
-            }
+            // Telemetry disabled for edge compatibility.
         }
     }
     function registerTraceReader(reader) {